import 'dart:convert';

import 'package:build/build.dart';
import 'package:collection/collection.dart';
import 'package:glob/glob.dart';

/// This builder is specific to `thisweekindart.dev`. It takes a look at all
/// (pre-processed) files in `pages/issues` to generate an index of all issues.
/// For each issue, it also emits a map to look up the previous and the next
/// one. We read the generated file in the template for issues to efficiently
/// build the navigation.
class IndexIssues extends Builder {
  IndexIssues([BuilderOptions? options]);

  @override
  Map<String, List<String>> get buildExtensions => const {
        r'$package$': ['lib/all.json'],
      };

  @override
  Future<void> build(BuildStep buildStep) async {
    final pages = buildStep.findAssets(Glob('pages/issues/issue-*.page_meta'));
    final issues = <ThisWeekInDartIssue>[];

    await for (final page in pages) {
      final decoded = json.decode(await buildStep.readAsString(page));
      final weight = decoded['frontMatter']['data']['weight'] as int? ?? -1;

      final issue = ThisWeekInDartIssue(page, weight);
      issues.add(issue);
    }
    issues.sortBy<num>((element) => element.index);

    final outputId = buildStep.allowedOutputs.single;
    await buildStep.writeAsString(
      outputId,
      json.encode(
        {
          'issues': [for (final issue in issues) issue.pageMeta.uri.toString()],
          'sequence': {
            for (var i = 0; i < issues.length; i++)
              issues[i].pageMeta.uri.toString(): {
                if (i != 0) 'prev': issues[i - 1].pageMeta.uri.toString(),
                if (i != issues.length - 1)
                  'next': issues[i + 1].pageMeta.uri.toString(),
              },
          }
        },
      ),
    );
  }
}

class ThisWeekInDartIssue {
  /// The `.page_meta` asset generated by `built_site`.
  final AssetId pageMeta;
  final int index;

  // at some point, we could collect more metadata about pages here. E.g. we
  // could put the package of the week in the front matter and generate a page
  // highlighting all package of the week recommendations.

  ThisWeekInDartIssue(this.pageMeta, this.index);
}
